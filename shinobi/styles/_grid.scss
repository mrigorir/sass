@use "../styles/breakpoints" as bp;
@use "../styles/colors" as colors;

@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
);
$layout-values: flex-start, center, flex-end, space-between, space-around,
  space-evenly;

@mixin column($i) {
  --col-span: #{$i};
  flex: 0 0 calc(var(--col-span) / #{$grid-columns} * 100%);
  
  @supports (display: grid) {
    grid-column: span var(--col-span);
  }
}

// base layout calsses

.container {
  box-sizing: border-box;
  max-width: 1200px;
  padding: 0 20px;
  margin: 0 auto;
  width: 100%;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-wrap: wrap;

  @supports (display: grid) {
    display: grid;
    grid-template-columns: repeat(var(--grid-columns, #{$grid-columns}), 1fr);
    gap: var(--grid-gap, 0);
  }
}

// grid-gaps
@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    padding: $val;
  }

  .gap-#{$key} {
    margin-inline: -$val;
  }
}

// justify-content-classes
@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

// col classes

.col {
  transition: all 0.3s ease;
  &:hover {
    transform: scale(1.02);
  }
}

@include bp.respond-to(xs) {
  @for $i from 1 through $grid-columns {
    .col-xs-#{$i} {
      @include column($i);
    }
  }
}

@include bp.respond-to(sm) {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      @include column($i);
    }
  }
}

@include bp.respond-to(md) {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      @include column($i);
    }
  }
}

@include bp.respond-to(lg) {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
      @include column($i);
    }
  }
}

@include bp.respond-to(xl) {
  @for $i from 1 through $grid-columns {
    .col-xl-#{$i} {
      @include column($i);
    }
  }
}

@include bp.respond-to(xxl) {
  @for $i from 1 through $grid-columns {
    .col-xxl-#{$i} {
      @include column($i);
    }
  }
}

@include bp.respond-to(xxxl) {
  @for $i from 1 through $grid-columns {
    .col-xxxl-#{$i} {
      @include column($i);
    }
  }
}
